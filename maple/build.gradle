plugins {
    id("com.android.library")
    id("maven-publish")
    id("signing")
}

android {
    compileSdk 32
    ndkVersion "23.1.7779620"

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            abiFilters 'x86', 'x86_64','armeabi-v7a','arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments += "-DANDROID_STL=c++_shared"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path = file("src/main/jni/CMakeLists.txt")
            version "3.18.1"
        }
    }

    buildFeatures {
        prefab true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}


publishing {
    publications {
        maven(MavenPublication) {
            group = "me.fycz.maple"
            artifactId = "maple"
            version = "1.3"
            afterEvaluate {
                artifact bundleReleaseAar
                artifact sourcesJar
            }
            pom {
                name = "Maple"
                description = "A hook framework for Android Runtime (ART)"
                url = "https://github.com/fengyuecanzhu/Maple"
                licenses {
                    license {
                        name = "GNU Lesser General Public License v3.0"
                        url = "https://github.com/fengyuecanzhu/Maple/blob/master/LICENSE"
                    }
                }
                developers {
                    developer {
                        name = "fengyuecanzhu"
                        url = "https://github.com/fengyuecanzhu"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/fengyuecanzhu/Maple.git"
                    url = "https://github.com/fengyuecanzhu/Maple"
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    def secretKeyRingFile = findProperty("signing.secretKeyRingFile")

    if (secretKeyRingFile != null && file(secretKeyRingFile).exists()) {
        sign publishing.publications
    } else if (signingKey != null) {
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications
    }
}

dependencies {
    implementation("org.lsposed.lsplant:lsplant:3.1")
    //可以参考这个发布
    implementation("io.github.vvb2060.ndk:dobby:1.2")
    compileOnly("androidx.annotation:annotation:1.3.0")
    implementation("org.apache.commons:commons-lang3:3.12.0")
}